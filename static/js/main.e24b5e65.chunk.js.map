{"version":3,"sources":["components/List/employeeList.js","components/List/searchPage.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeList","list","map","v","k","dob","Date","date","toLocaleDateString","src","picture","thumbnail","alt","name","first","last","phone","email","SearchPage","props","useState","input","setInput","employeeListDefault","setEmployeeListDefault","employeeList","setEmployeeList","fetchData","a","axios","get","response","d","data","results","updateInput","filtered","filter","emp","toLowerCase","includes","target","value","useEffect","className","type","placeholder","onChange","scope","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAkCeA,EAhCM,SAAC,GAAe,IAAD,IAAbC,YAAa,MAAR,GAAQ,EAClC,OACE,mCAEIA,EAAKC,KAAI,SAACC,EAAGC,GACX,IAAIC,EAAM,IAAIC,KAAKH,EAAEE,IAAIE,MAAMC,mBAAmB,SAClD,OAAO,+BACL,6BACE,qBAAKC,IAAKN,EAAEO,QAAQC,UAAWC,IAAI,OAErC,6BACGT,EAAEU,KAAKC,QAEV,6BACGX,EAAEU,KAAKE,OAEV,6BACGZ,EAAEa,QAEL,6BACGb,EAAEc,QAEL,6BACGZ,MAjBWD,SCqEXc,EAzEI,SAACC,GAAW,IAAD,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,OAE0BF,qBAF1B,mBAErBG,EAFqB,KAEAC,EAFA,OAGYJ,qBAHZ,mBAGrBK,EAHqB,KAGPC,EAHO,KAKtBC,EAAS,uCAAG,8BAAAC,EAAA,sEACOC,IAAMC,IAAI,iDADjB,UACVC,EADU,SAEVC,EAAID,EAASE,KAAKC,SAFR,uBAIdR,EAAgBM,GAChBR,EAAuBQ,GALT,kBAMPA,GANO,gCAQT,MARS,2CAAH,qDAWTG,EAAW,uCAAG,WAAOd,GAAP,eAAAO,EAAA,sDACVQ,EAAWb,EAAoBc,QAAO,SAAAC,GAC1C,OAAOA,EAAIzB,KAAKC,MAAMyB,cAAcC,SAASnB,EAAMoB,OAAOC,MAAMH,gBAAkBD,EAAIzB,KAAKE,KAAKwB,cAAcC,SAASnB,EAAMoB,OAAOC,MAAMH,kBAE7IjB,EAASD,GACTK,EAAgBU,GALC,2CAAH,sDAUjB,OAFAO,qBAAW,WAAOhB,MAAa,IAG7B,qCACA,qBAAKiB,UAAU,4BAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,qDACA,sBAAMA,UAAU,SAAhB,SACF,qBAAKA,UAAU,aAAf,SACE,uBAAOC,KAAK,OAAOxB,MAAOA,EAAOyB,YAAY,SAAQC,SAAUZ,aAM/D,qBAAKS,UAAU,YAAf,SACI,wBAAOA,UAAU,kCAAjB,UACF,gCACA,+BACE,oBAAII,MAAM,MAAV,qBAGA,oBAAIA,MAAM,MAAV,wBAGA,oBAAIA,MAAM,MAAV,uBAGA,oBAAIA,MAAM,MAAV,0BAGA,oBAAIA,MAAM,MAAV,mBAGA,oBAAIA,MAAM,MAAV,2BAKF,gCACA,cAAC,EAAD,CAAc/C,KAAMwB,eCvDfwB,MARf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,cAAC,EAAD,OCGSM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e24b5e65.chunk.js","sourcesContent":["import React from 'react';\r\n// renders the employye list\r\nconst EmployeeList = ({list=[]}) => {\r\n  return (\r\n    <>\r\n      {\r\n        list.map((v, k) => {\r\n          let dob = new Date(v.dob.date).toLocaleDateString('en-GB');\r\n          return <tr key={k}>\r\n            <td>\r\n              <img src={v.picture.thumbnail} alt='' />\r\n            </td>\r\n            <td>\r\n              {v.name.first}\r\n            </td>\r\n            <td>\r\n              {v.name.last}\r\n            </td>\r\n            <td>\r\n              {v.phone}\r\n            </td>\r\n            <td>\r\n              {v.email}\r\n            </td>\r\n            <td>\r\n              {dob}\r\n            </td>\r\n          </tr>\r\n        })\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmployeeList","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport EmployeeList from './employeeList';\r\n\r\nconst SearchPage = (props) => {\r\n  const [input, setInput] = useState('');\r\n  const [employeeListDefault, setEmployeeListDefault] = useState();\r\n  const [employeeList, setEmployeeList] = useState();\r\n// fetches API call\r\n  const fetchData = async () => {\r\n    const response = await axios.get('https://randomuser.me/api/?results=200&nat=us');\r\n    const d = response.data.results;\r\n    if (d) {\r\n      setEmployeeList(d);\r\n      setEmployeeListDefault(d);\r\n      return d;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const updateInput = async (input) => {\r\n      const filtered = employeeListDefault.filter(emp => {\r\n        return emp.name.first.toLowerCase().includes(input.target.value.toLowerCase()) || emp.name.last.toLowerCase().includes(input.target.value.toLowerCase())\r\n     })\r\n     setInput(input);\r\n     setEmployeeList(filtered);\r\n  }\r\n\r\n  useEffect( () => {fetchData()},[]);\r\n//creates the jumbotron \r\n  return (\r\n    <>\r\n    <div className='jumbotron jumbotron-fluid'>\r\n      <div className='container'>\r\n        <h1 className='display-6'>Employee Directory</h1>\r\n        <p className='lead'>Use the search bar to find an employee.</p>\r\n        <form className='search'>\r\n      <div className='form-group'>\r\n        <input type='text' input={input} placeholder='Search'onChange={updateInput} />\r\n      </div>\r\n    </form> \r\n      </div>\r\n    </div> \r\n    {/*populates the table with all information from the api */}\r\n        <div className='container'> \r\n            <table className='table table-stripped table-dark'>\r\n          <thead>\r\n          <tr>\r\n            <th scope='col'>\r\n              Picture\r\n            </th>\r\n            <th scope='col'>\r\n              First Name\r\n            </th>\r\n            <th scope='col'>\r\n              Last Name\r\n            </th>\r\n            <th scope='col'>\r\n              Phone Number\r\n            </th>\r\n            <th scope='col'>\r\n              Email\r\n            </th>\r\n            <th scope='col'>\r\n              Birthday\r\n            </th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <EmployeeList list={employeeList} />\r\n          </tbody>\r\n        </table>\r\n        </div>\r\n    </>\r\n   );\r\n}\r\n\r\nexport default SearchPage","import React from 'react';\nimport './App.css';\nimport './bootstrap.min.css';\nimport SearchPage from './components/List/searchPage';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchPage />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}